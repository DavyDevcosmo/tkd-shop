generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  filterTypes FilterType[]
  products    Product[]
}

model FilterType {
  id           Int           @id @default(autoincrement())
  name         String
  categoryId   Int
  category     Category      @relation(fields: [categoryId], references: [id])
  filterValues FilterValue[]
}

model FilterValue {
  id             Int             @id @default(autoincrement())
  value          String
  filterTypeId   Int
  filterType     FilterType      @relation(fields: [filterTypeId], references: [id])
  productFilters ProductFilter[]
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String
  password String
  products Product[]
}

model Product {
  name           String
  description    String
  price          Float
  slug           String
  userId         Int?
  id             Int             @id @default(autoincrement())
  categoryId     Int
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  color          String?
  sizeDobok      String?
  beltSize       String?
  category       Category        @relation(fields: [categoryId], references: [id])
  user           User?           @relation(fields: [userId], references: [id])
  productFilters ProductFilter[]
  images         ProductImage[]
}

model ProductFilter {
  id            Int         @id @default(autoincrement())
  productId     Int
  filterValueId Int
  filterValue   FilterValue @relation(fields: [filterValueId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}